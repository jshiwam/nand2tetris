// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Brute Force (More Gates Used)
    // Inc16(in=prev, out=incout);
    
    // Mux16(a=prev, b=false, sel=reset,out=zeromuxprev);

    // Not(in=reset,out=nreset);
    // And(a=nreset,b=load, out=loadonly);

    // Mux16(a=zeromuxprev, b=in, sel=loadonly, out=zeromuxprevmuxin);

    // Not(in=load,out=notload);
    // And(a=inc,b=notload,out=incAndnotload);
    // And(a=nreset,b=incAndnotload,out=inconly);

    // Mux16(a=zeromuxprevmuxin, b=incout, sel=inconly, out=result);

    // Or(a=reset,b=loadonly,out=resOrlo);
    // Or(a=resOrlo,b=inc,out=resOrloOrinc);
    // Register(in=result,load=resOrloOrinc,out=out,out=prev);

    //=================================================================

    //Optimal (Clever Use of Muxes)
    Inc16(in=prevout, out=incout);

    Mux16(a=prevout, b=incout, sel=inc, out=prevxinc);
    Mux16(a=prevxinc, b=in, sel=load, out=prevxincxin);
    Mux16(a=prevxincxin, b=false, sel=reset, out= muxout);

    Or(a=reset, b=load, out=rl);
    Or(a=rl, b=inc, out=loaded);

    Register(in=muxout,load=loaded,out=out,out=prevout);
}
