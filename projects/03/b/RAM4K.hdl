// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=ram512a, b=ram512b, c=ram512c, d=ram512d, e=ram512e, f=ram512f, g=ram512g, h=ram512h);
    
    RAM512(in=in, load=ram512a, address=address[0..8], out=oram512a);
    RAM512(in=in, load=ram512b, address=address[0..8], out=oram512b);
    RAM512(in=in, load=ram512c, address=address[0..8], out=oram512c);
    RAM512(in=in, load=ram512d, address=address[0..8], out=oram512d);
    RAM512(in=in, load=ram512e, address=address[0..8], out=oram512e);
    RAM512(in=in, load=ram512f, address=address[0..8], out=oram512f);
    RAM512(in=in, load=ram512g, address=address[0..8], out=oram512g);
    RAM512(in=in, load=ram512h, address=address[0..8], out=oram512h);

    Mux8Way16(a=oram512a, b=oram512b, c=oram512c, d=oram512d, e=oram512e, f=oram512f, g=oram512g, h=oram512h, sel=address[9..11], out=out);
}