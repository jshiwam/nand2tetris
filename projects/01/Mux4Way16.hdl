// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */
// 00/01/10/11
//sel = [0,0] ;[0,1];[1,0];[1,1] ;; Little Endian [1,0]
// = a.sel0'.sel1' + b.sel0.sel1' + c.sel0'.sel1 + d.sel0.sel1
// = (a.sel0' + b.sel0).sel1' + (c.sel0'+d.sel0).sel1

//sel = [0,0] ;[0,1];[1,0];[1,1] ;; Big Endian [0,1]
// a[i].sel[0]'.sel[1]'+ b[i].sel[0]'.sel[1]+ c[i].sel[0].sel[1]'+ d[i].sel[0].sel[1] 
// =(a[i].sel[1]' + b[i].sel[1]).sel[0]' + (c[i].sel[1]' + d[i].sel[1]).sel[0] 

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(a=a, b=b, sel=sel[0], out=asel0b);
    Mux16(a=c, b=d, sel=sel[0], out=csel0d);
    Mux16(a=asel0b, b=csel0d, sel=sel[1], out=out);
}