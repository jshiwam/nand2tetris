// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */
 //a n2n1n0 + b n2n1s0
 //c n2s1n0 + d n2s1s0
 //n2(n1(n0+s0)+s1(n0+s0))
 //e s2n1n0 + f s2n1s0
 //g s2s1n0 + h s2s1s0
 //s2(n1(n0+s0)+s1(n0+s0))

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    DMux(in=in, sel=sel[0], a=x0, b=y0);
    DMux(in=x0, sel=sel[1], a=x1, b=x2);
    DMux(in=y0, sel=sel[1], a=y1, b=y2);
    DMux(in=x1, sel=sel[2], a=a, b=e);
    DMux(in=y1, sel=sel[2], a=b, b=f);
    DMux(in=x2, sel=sel[2], a=c, b=g);
    DMux(in=y2, sel=sel[2], a=d, b=h);
}